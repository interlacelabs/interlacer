name: ci

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: "Build the Docker image"
        run: |
          docker build terraform/alpine-app --tag alpine-app:${{github.sha}}

      - name: "Run ID"
        run: echo ${{ github.run_id }}
      
      - name: "Commit SHA"
        run: echo ${{ github.sha }}

      - name: "Event"
        run: echo ${{ github.event_name }}

  LaceworkInlineScanner:
    # if: github.event_name == 'pull_request'
    needs: [Build]
    uses: ./.github/workflows/lacework_vuln_check.yaml
    secrets: inherit
    with:
      dockerfile: terraform/alpine-app
      image_name: alpine-app
      image_tag: ${{github.sha}}

  #   # LaceworkIaCSecurity:

  #   #   #if: github.event_name == 'pull_request'
  #   #   needs: [Build]
  #   #   uses: ./.github/workflows/lacework_iac_check.yaml
  #   #   secrets: inherit

  # DeployDev:
  #   name: Deploy to Dev
  #   if: github.ref == 'refs/heads/dev'
  #   needs:
  #     - LaceworkIaCSecurity
  #     - LaceworkInlineScanner
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: Development
  #   steps:
  #     - id: step1
  #       name: "Terraform Init"
  #       uses: hashicorp/terraform-github-actions@master
  #       with:
  #         tf_actions_version: 1.1.5
  #         tf_actions_subcommand: "init"
  #         tf_actions_working_dir: "terraform"
  #         tf_actions_comment: true
  #         args: '-backend-config="bucket=${{ secrets.TF_BACKEND_BUCKET }}" -backend-config="profile=${{ secrets.TF_BACKEND_PROFILE }}" -backend-config="key=${{ secrets.TF_BACKEND_KEY }} -backend-config="dynamodb_table=${{ secrets.TF_BACKEND_DYNAMODB_TABLE }}" -backend-config="region=${{ secrets.TF_BACKEND_REGION }}"'
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         AWS_PROFILE: ${{ secrets.AWS_PROFILE }}
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

  # DeployStaging:
  #   name: Deploy to Staging
  #   if: github.event.ref == 'refs/heads/main'
  #   # needs:
  #   #   - LaceworkIaCSecurity
  #   #   - LaceworkInlineScanner
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: Staging
  #   steps:
  #     - id: step1
  #       name: "Terraform Init"
  #       uses: hashicorp/terraform-github-actions@master
  #       with:
  #         tf_actions_version: 1.3.7
  #         tf_actions_subcommand: "init"
  #         tf_actions_working_dir: "terraform"
  #         tf_actions_comment: true
  #         args: "-backend-config=backend/backend.tfvars"
  #       env:
  #         TF_WORKSPACE: dev
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         AWS_DEFAULT_REGION: us-east-1

  # DeployProd:
  #   name: Deploy to Production
  #   needs: [DeployStaging]
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: Production
  #   steps:
  #     - name: "Terraform Init"
  #       uses: hashicorp/terraform-github-actions@master
  #       with:
  #         tf_actions_version: 1.1.5
  #         tf_actions_subcommand: "init"
  #         tf_actions_working_dir: "terraform"
  #         tf_actions_comment: true
  #         args: '-backend-config="bucket=${{ secrets.TF_BACKEND_BUCKET }}" -backend-config="profile=${{ secrets.TF_BACKEND_PROFILE }}" -backend-config="key=${{ secrets.TF_BACKEND_KEY }} -backend-config="dynamodb_table=${{ secrets.TF_BACKEND_DYNAMODB_TABLE }}" -backend-config="region=${{ secrets.TF_BACKEND_REGION }}"'
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         AWS_PROFILE: ${{ secrets.AWS_PROFILE }}
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
