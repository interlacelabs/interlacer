name: lacework_vuln_check

on:
  workflow_call:
    inputs:
      image_name:
        description: "docker image to be scanned"
        required: true
        type: string
        default: ${{ vars.IMAGE_NAME }}
      image_tag:
        description: "docker image tag to be scanned"
        required: true
        type: string
        default: ${{ github.sha }}
      build_id:
        description: "unique id for this build run"
        type: string
        default: ${{ github.run_id }}
      build_plan:
        description: "the name of the build plan"
        type: string
        default: ${{ github.workflow }}
      dockerfile:
        description: "dockerfile path to build image"
        required: true
        type: string
        default: ${{ vars.DOCKERFILE }}

  workflow_dispatch: # allow this workflow to be run manually

jobs:
  # check the dockerfile for vulnerabilities
  lacework_vuln_check:
    name: "VulnScan"
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: "Run ID"
        run: echo ${{ github.run_id }}
      
      
      - name: "Commit SHA"
        run: echo ${{ github.sha }}

      - name: "Event"
        run: echo ${{ github.event_name }}
  
      - uses: actions/checkout@v3
      - name: "Build the Docker image"
        run: |
          docker build ${{ inputs.dockerfile }} --tag ${{ inputs.image_name }}:${{ inputs.image_tag }}

      - id: step1
        name: "Scan container images for vulnerabitilies using Lacework"
        uses: addnab/docker-run-action@v3
        with:
          image: docker.io/lacework/lacework-inline-scanner:latest
          options: -v ${{ github.workspace }}/work:/work -e LW_ACCOUNT_NAME=${{ secrets.LW_ACCOUNT_NAME }} -e LW_ACCESS_TOKEN=${{ secrets.LW_ACCESS_TOKEN }}
          run: |
            /opt/lacework/lw-scanner evaluate ${{ inputs.image_name }} ${{ inputs.image_tag }} --fail-on-violation-exit-code=1 --save --policy -l /work -d /work --ci-build --build-id=${{ inputs.build_id }}
